
# This file is generated from service.yml.template. Please edit that instead and regenerate.
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: default-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
# headless service for internal DNS networking
kind: Service
apiVersion: v1
metadata:
  name: libri
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  clusterIP: None
  ports:
  - port: 20100
  selector:
    app: libri
---
# NodePort service exposing the librarians-0 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-0
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30100
  selector:
    hostname: librarians-0
---
# PersistentVolume for librarian 0's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-0
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-0"
  
---
# PersistentVolumeClaim for librarian 0's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-0
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-0
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-1 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-1
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30101
  selector:
    hostname: librarians-1
---
# PersistentVolume for librarian 1's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-1
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-1"
  
---
# PersistentVolumeClaim for librarian 1's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-1
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-1
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-2 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-2
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30102
  selector:
    hostname: librarians-2
---
# PersistentVolume for librarian 2's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-2
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-2"
  
---
# PersistentVolumeClaim for librarian 2's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-2
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-2
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-3 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-3
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30103
  selector:
    hostname: librarians-3
---
# PersistentVolume for librarian 3's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-3
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-3"
  
---
# PersistentVolumeClaim for librarian 3's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-3
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-3
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-4 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-4
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30104
  selector:
    hostname: librarians-4
---
# PersistentVolume for librarian 4's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-4
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-4"
  
---
# PersistentVolumeClaim for librarian 4's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-4
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-4
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-5 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-5
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30105
  selector:
    hostname: librarians-5
---
# PersistentVolume for librarian 5's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-5
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-5"
  
---
# PersistentVolumeClaim for librarian 5's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-5
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-5
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-6 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-6
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30106
  selector:
    hostname: librarians-6
---
# PersistentVolume for librarian 6's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-6
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-6"
  
---
# PersistentVolumeClaim for librarian 6's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-6
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-6
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-7 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-7
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30107
  selector:
    hostname: librarians-7
---
# PersistentVolume for librarian 7's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-7
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-7"
  
---
# PersistentVolumeClaim for librarian 7's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-7
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-7
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-8 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-8
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30108
  selector:
    hostname: librarians-8
---
# PersistentVolume for librarian 8's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-8
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-8"
  
---
# PersistentVolumeClaim for librarian 8's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-8
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-8
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-9 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-9
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30109
  selector:
    hostname: librarians-9
---
# PersistentVolume for librarian 9's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-9
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-9"
  
---
# PersistentVolumeClaim for librarian 9's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-9
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-9
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-10 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-10
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30110
  selector:
    hostname: librarians-10
---
# PersistentVolume for librarian 10's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-10
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-10"
  
---
# PersistentVolumeClaim for librarian 10's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-10
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-10
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-11 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-11
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30111
  selector:
    hostname: librarians-11
---
# PersistentVolume for librarian 11's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-11
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-11"
  
---
# PersistentVolumeClaim for librarian 11's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-11
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-11
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-12 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-12
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30112
  selector:
    hostname: librarians-12
---
# PersistentVolume for librarian 12's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-12
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-12"
  
---
# PersistentVolumeClaim for librarian 12's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-12
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-12
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-13 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-13
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30113
  selector:
    hostname: librarians-13
---
# PersistentVolume for librarian 13's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-13
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-13"
  
---
# PersistentVolumeClaim for librarian 13's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-13
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-13
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-14 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-14
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30114
  selector:
    hostname: librarians-14
---
# PersistentVolume for librarian 14's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-14
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-14"
  
---
# PersistentVolumeClaim for librarian 14's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-14
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-14
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# NodePort service exposing the librarians-15 node to the outside world
kind: Service
apiVersion: v1
metadata:
  name: librarians-15
  annotations:
    prometheus.io/scrape: "false"  # we get stats from individual pods
spec:
  type: NodePort
  ports:
  - port: 20100
    nodePort: 30115
  selector:
    hostname: librarians-15
---
# PersistentVolume for librarian 15's /data dir
kind: PersistentVolume
apiVersion: v1
metadata:
  name: data-librarians-15
  labels:
    app: libri
  annotations:
    backup.kubernetes.io/deltas: PT1H P1D P7D P30D
spec:
  capacity:
    storage: 25Gi
  accessModes: ["ReadWriteOnce"]
  gcePersistentDisk:
      fsType: "ext4"
      pdName: "data-librarians-15"
  
---
# PersistentVolumeClaim for librarian 15's PersistentVolume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-librarians-15
  labels:
    app: libri
spec:
  storageClassName: ""
  volumeName: data-librarians-15
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 25Gi
---
# StatefulSet of 16 librarians
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: librarians
spec:
  serviceName: libri
  replicas: 16
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: libri
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "20200"
    spec:
      containers:
      - name: libriarian
        image: daedalus2718/libri:snapshot-9944f62
        command: ["/bin/sh"]
        args:
          - "-c"
          - >
            libri librarian start
            --nSubscriptions 2
            --dataDir /data
            --localPort 20100
            --localMetricsPort 20200
            --publicHost $(wget -q -O - 'http://ipv4.myexternalip.com/raw')
            --publicPort $(HN=$(hostname) && echo $((30100 + ${HN##*-})))
            --bootstraps 'librarians-0.libri.default.svc.cluster.local:20100,librarians-3.libri.default.svc.cluster.local:20100'
            --profile
        env:
        - name: GODEBUG         # ensure we use the pure Go (rather than CGO) DNS
          value: netdns=go      # resolver (see https://golang.org/src/net/net.go)
        - name: LIBRI_LOCALHOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 20100
        - containerPort: 20200
        livenessProbe:
          exec:
            command: [
              "sh", "-c",
              "libri", "test", "health",
              "-a", "$(hostname).libri.default.svc.cluster.local:20100"
            ]
          initialDelaySeconds: 15
          periodSeconds: 30
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
          limits:
            memory: 2G
            cpu: 100m

      initContainers:
      - image: devth/k8s-labeler
        name: labeler
        env:
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBE_LABEL_hostname  # used to identify individual pods to each NodePort service
          valueFrom:
            fieldRef:
              fieldPath: metadata.name

      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data

  volumeClaimTemplates:
  - metadata:
      name: data